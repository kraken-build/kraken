name: "Python"

on:
  push: { branches: [ "develop" ], tags: [ "*" ] }
  pull_request: { branches: [ "*" ] }

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: "3.7"
            only: --only=kraken-common,kraken-wrapper
          - python-version: "3.8"
            only: --only=kraken-common,kraken-wrapper
          - python-version: "3.9"
            only: --only=kraken-common,kraken-wrapper
          - python-version: "3.10"
            only: ''
          - python-version: "3.11"
            only: --only=kraken-common,kraken-wrapper
    steps:
    - uses: actions/checkout@v2
    - uses: NiklasRosenstein/slap@gha/install/v1
    - uses: actions/setup-python@v2
      with: { python-version: "${{ matrix.python-version }}" }
    - run: slap install --link --no-venv-check ${{ matrix.only }}
    - run: slap test ${{ matrix.only }}

  kraken-std-integration-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.10"
            test-type: integrationTest

    steps:
    - uses: actions/checkout@v2
      with: { fetch-depth: 0 }
    - uses: NiklasRosenstein/slap@gha/install/v1
    - uses: actions/setup-python@v2
      with: { python-version: "${{ matrix.python-version }}" }
    - run: pip install pipx && pipx install kraken-wrapper

    # Need Poetry and PDM for integration tests.
    - run: pipx install poetry
    - run: curl -sSL https://raw.githubusercontent.com/pdm-project/pdm/main/install-pdm.py | python3 -

    # Make sure we have Docker available for the ete-tests.
    - uses: docker/setup-buildx-action@v2

    - run: cd kraken-std && krakenw -v run ${{ matrix.test-type }} -v
      env:
        ARTIFACTORY_CARGO_REPOSITORY: ${{ vars.ARTIFACTORY_CARGO_REPOSITORY }}
        CLOUDSMITH_CARGO_REPOSITORY: ${{ vars.CLOUDSMITH_CARGO_REPOSITORY }}
        CLOUDSMITH_INTEGRATION_TEST_CREDENTIALS: |
          {
            "api_key": "${{ secrets.CLOUDSMITH_API_KEY }}",
            "owner": "${{ vars.CLOUDSMITH_OWNER }}",
            "user": "${{ vars.CLOUDSMITH_USER }}"
          }
        ARTIFACTORY_INTEGRATION_TEST_CREDENTIALS: |
          {
            "token": "${{ secrets.ARTIFACTORY_TOKEN }}",
            "url": "${{ vars.ARTIFACTORY_URL }}",
            "user": "${{ vars.ARTIFACTORY_USER }}"
          }

  documentation:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
    - uses: actions/checkout@v2
    - uses: NiklasRosenstein/slap@gha/install/v1
    - run: slap install --link --no-venv-check ${{ matrix.only }}
    - run: kraken run docsBuild --no-save
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: docs/_site
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/develop'
      id: deployment
      uses: actions/deploy-pages@v2
